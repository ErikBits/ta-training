# test under extreme loads to see how it handles high traffic or data processing (big files etc)

# Stress testing: 
# It involves testing a product under extreme workloads to see whether it handles high traffic or not. The objective is to identify the breaking point of a software product.

#via frontend to see when it breaks. one time test


#push system to limits to identify breaking points and bottlenecks
#quite sustained but not as long as endurance


# test if it can handle sudden large spikes in load generated by users


## large number of users and requests in short amount of time

#big amount of users and reqs for a little bit
# realistic spikes

from locust import HttpUser, task, FastHttpUser

class StressPageRequestsUser(HttpUser):

    @task
    def dashboard(self):
        self.client.get("/")

    @task
    def products(self):
        self.client.get('/products')

    @task
    def about(self):
        self.client.get('/about')
    
    @task
    def login(self):
        self.client.get('/login')

